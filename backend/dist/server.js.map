{"version":3,"sources":["../src/server.ts"],"sourcesContent":["import dotenv from \"dotenv\";\r\nimport express from \"express\";\r\nimport path from \"path\";\r\nimport helmet from \"helmet\";\r\nimport cors from \"cors\";\r\nimport cookieParser from \"cookie-parser\";\r\nimport logger from \"morgan\";\r\nimport Razorpay from \"razorpay\";\r\n\r\ndotenv.config();\r\n\r\nconst app = express();\r\n\r\napp.use(logger(\"dev\"));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(helmet());\r\napp.use(cookieParser());\r\napp.use(cors());\r\napp.use(express.static(path.join(__dirname, \"views\")));\r\n\r\nconst instance = new Razorpay({\r\n  key_id: process.env.RZP_KEY_ID,\r\n  key_secret: process.env.RZP_KEY_SECRET,\r\n});\r\n\r\napp.get(\"/\", function (req, res, next) {\r\n  res.render(\"index\", { title: \"Express\" });\r\n});\r\n\r\napp.get(\"/api/v1/rzp_capture/:payment_id\", (req, res) => {\r\n  const { payment_id } = req.params;\r\n\r\n  instance.payments\r\n    .capture(payment_id, FIXED_AMOUNT)\r\n    .then((data) => {\r\n      // Perform any action after successful payment\r\n      console.log(\"Payment successful:\", data);\r\n\r\n      // Example: Save payment details to database or send confirmation email\r\n      // savePaymentToDB(data);\r\n      // sendEmailConfirmation(data.email);\r\n\r\n      res.json({\r\n        success: true,\r\n        message: \"Payment captured successfully\",\r\n        data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Payment capture failed:\", error);\r\n      res\r\n        .status(500)\r\n        .json({ success: false, message: \"Payment capture failed\", error });\r\n    });\r\n});\r\n\r\napp.listen(\"3000\", () => console.log(\"Listening on port 3000\"));\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oBAAmB;AACnB,qBAAoB;AACpB,kBAAiB;AACjB,oBAAmB;AACnB,kBAAiB;AACjB,2BAAyB;AACzB,oBAAmB;AACnB,sBAAqB;AAErB,cAAAA,QAAO,OAAO;AAEd,IAAM,UAAM,eAAAC,SAAQ;AAEpB,IAAI,QAAI,cAAAC,SAAO,KAAK,CAAC;AACrB,IAAI,IAAI,eAAAD,QAAQ,KAAK,CAAC;AACtB,IAAI,IAAI,eAAAA,QAAQ,WAAW,EAAE,UAAU,MAAM,CAAC,CAAC;AAC/C,IAAI,QAAI,cAAAE,SAAO,CAAC;AAChB,IAAI,QAAI,qBAAAC,SAAa,CAAC;AACtB,IAAI,QAAI,YAAAC,SAAK,CAAC;AACd,IAAI,IAAI,eAAAJ,QAAQ,OAAO,YAAAK,QAAK,KAAK,WAAW,OAAO,CAAC,CAAC;AAErD,IAAM,WAAW,IAAI,gBAAAC,QAAS;AAAA,EAC5B,QAAQ,QAAQ,IAAI;AAAA,EACpB,YAAY,QAAQ,IAAI;AAC1B,CAAC;AAED,IAAI,IAAI,KAAK,SAAU,KAAK,KAAK,MAAM;AACrC,MAAI,OAAO,SAAS,EAAE,OAAO,UAAU,CAAC;AAC1C,CAAC;AAED,IAAI,IAAI,mCAAmC,CAAC,KAAK,QAAQ;AACvD,QAAM,EAAE,WAAW,IAAI,IAAI;AAE3B,WAAS,SACN,QAAQ,YAAY,YAAY,EAChC,KAAK,CAAC,SAAS;AAEd,YAAQ,IAAI,uBAAuB,IAAI;AAMvC,QAAI,KAAK;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT;AAAA,IACF,CAAC;AAAA,EACH,CAAC,EACA,MAAM,CAAC,UAAU;AAChB,YAAQ,MAAM,2BAA2B,KAAK;AAC9C,QACG,OAAO,GAAG,EACV,KAAK,EAAE,SAAS,OAAO,SAAS,0BAA0B,MAAM,CAAC;AAAA,EACtE,CAAC;AACL,CAAC;AAED,IAAI,OAAO,QAAQ,MAAM,QAAQ,IAAI,wBAAwB,CAAC;","names":["dotenv","express","logger","helmet","cookieParser","cors","path","Razorpay"]}